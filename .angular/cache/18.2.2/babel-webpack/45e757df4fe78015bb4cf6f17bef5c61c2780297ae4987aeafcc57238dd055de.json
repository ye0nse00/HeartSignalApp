{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nconst navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\n  const nav = el.closest('ion-nav');\n  if (nav) {\n    if (routerDirection === 'forward') {\n      if (component !== undefined) {\n        return nav.push(component, componentProps, {\n          skipIfBusy: true,\n          animationBuilder: routerAnimation\n        });\n      }\n    } else if (routerDirection === 'root') {\n      if (component !== undefined) {\n        return nav.setRoot(component, componentProps, {\n          skipIfBusy: true,\n          animationBuilder: routerAnimation\n        });\n      }\n    } else if (routerDirection === 'back') {\n      return nav.pop({\n        skipIfBusy: true,\n        animationBuilder: routerAnimation\n      });\n    }\n  }\n  return Promise.resolve(false);\n};\nconst NavLink = /*@__PURE__*/proxyCustomElement(class NavLink extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.onClick = () => {\n      return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\n    };\n    this.component = undefined;\n    this.componentProps = undefined;\n    this.routerDirection = 'forward';\n    this.routerAnimation = undefined;\n  }\n  render() {\n    return h(Host, {\n      key: '42c23dcdec5fdb25defebaf6e8a9fa75754ff8eb',\n      onClick: this.onClick\n    });\n  }\n  get el() {\n    return this;\n  }\n}, [0, \"ion-nav-link\", {\n  \"component\": [1],\n  \"componentProps\": [16],\n  \"routerDirection\": [1, \"router-direction\"],\n  \"routerAnimation\": [16]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-nav-link\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-nav-link\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, NavLink);\n        }\n        break;\n    }\n  });\n}\nconst IonNavLink = NavLink;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonNavLink, defineCustomElement };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}