{"ast":null,"code":"import _asyncToGenerator from \"D:/Heart/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { m as menuController } from './index4.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { u as updateVisibility } from './menu-toggle-util.js';\nconst menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\nconst IonMenuToggleStyle0 = menuToggleCss;\nconst MenuToggle = /*@__PURE__*/proxyCustomElement(class MenuToggle extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.onClick = () => {\n      return menuController.toggle(this.menu);\n    };\n    this.visible = false;\n    this.menu = undefined;\n    this.autoHide = true;\n  }\n  connectedCallback() {\n    this.visibilityChanged();\n  }\n  visibilityChanged() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.visible = yield updateVisibility(_this.menu);\n    })();\n  }\n  render() {\n    const mode = getIonMode(this);\n    const hidden = this.autoHide && !this.visible;\n    return h(Host, {\n      key: '90e621f09792383f1badcc1b402b1ac7d08c5f98',\n      onClick: this.onClick,\n      \"aria-hidden\": hidden ? 'true' : null,\n      class: {\n        [mode]: true,\n        'menu-toggle-hidden': hidden\n      }\n    }, h(\"slot\", {\n      key: 'c0abdd1d91e9d80ee3704e3e374ebe1f29078460'\n    }));\n  }\n  static get style() {\n    return IonMenuToggleStyle0;\n  }\n}, [1, \"ion-menu-toggle\", {\n  \"menu\": [1],\n  \"autoHide\": [4, \"auto-hide\"],\n  \"visible\": [32]\n}, [[16, \"ionMenuChange\", \"visibilityChanged\"], [16, \"ionSplitPaneVisible\", \"visibilityChanged\"]]]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-menu-toggle\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-menu-toggle\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, MenuToggle);\n        }\n        break;\n    }\n  });\n}\nconst IonMenuToggle = MenuToggle;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonMenuToggle, defineCustomElement };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}